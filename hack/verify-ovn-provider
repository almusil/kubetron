#!/bin/bash

unset NETWORK0 NETWORK0_ID SUBNET0 PORT0 PORT0_ID PORT0_IP PORT0_MAC PORT1 PORT1_ID PORT1_IP PORT1_MAC

NETWORK0=`vagrant ssh master -c "curl --data '{\"network\":{\"name\":\"NETWORK0\"}}' http://localhost:9696/v2.0/networks"`
NETWORK0=${NETWORK0//[ $'\001'-$'\037']}
echo $NETWORK0
NETWORK0_ID=`python -c "import json; print(json.loads('$NETWORK0')['network']['id'])"`
echo $NETWORK0_ID
SUBNET0=`vagrant ssh master -c "curl --data '{
    \"subnet\":
        {

            \"gateway_ip\": \"10.0.0.100\",
            \"enable_dhcp\": true,
            \"network_id\": \"$NETWORK0_ID\",
            \"cidr\": \"10.0.0.0/24\",
            \"dns_nameservers\": [
                \"8.8.8.8\"
            ]
        }
}' http://localhost:9696/v2.0/subnets"`
echo $SUBNET0

PORT0=`vagrant ssh master -c "curl --data '{\"port\":{\"name\":\"PORT0\", \"network_id\":\"$NETWORK0_ID\"}}' http://localhost:9696/v2.0/ports"`
PORT0=${PORT0//[ $'\001'-$'\037']}
echo $PORT0

PORT0_ID=`python -c "import json; print(json.loads('$PORT0')['port']['id'])"`
echo $PORT0_ID
PORT0_IP=`python -c "import json; print(json.loads('$PORT0')['port']['fixed_ips'][0]['ip_address'])"`
echo $PORT0_IP
PORT0_MAC=`python -c "import json; print(json.loads('$PORT0')['port']['mac_address'])"`
echo $PORT0_MAC

PORT1=`vagrant ssh master -c "curl --data '{\"port\":{\"name\":\"PORT1\", \"network_id\":\"$NETWORK0_ID\"}}' http://localhost:9696/v2.0/ports"`
PORT1=${PORT1//[ $'\001'-$'\037']}
echo $PORT1

PORT1_ID=`python -c "import json; print(json.loads('$PORT1')['port']['id'])"`
echo $PORT1_ID
PORT1_IP=`python -c "import json; print(json.loads('$PORT1')['port']['fixed_ips'][0]['ip_address'])"`
echo $PORT1_IP
PORT1_MAC=`python -c "import json; print(json.loads('$PORT1')['port']['mac_address'])"`
echo $PORT1_MAC

HOSTS=( node1 node2 )
PORT_IDS=( $PORT0_ID $PORT1_ID )
PORT_IPS=( $PORT0_IP $PORT1_IP )
PORT_MACS=( $PORT0_MAC $PORT1_MAC )

for i in $(seq 0 $((${#HOSTS[*]}-1))); do

  node=${HOSTS[i]}

  vagrant ssh $node -c "sudo ip netns add $node &&
    sudo ovs-vsctl add-port br-int $node -- set interface $node type=internal &&
    sudo ip link set $node netns $node  &&
    sudo ip netns exec $node ip link set $node address ${PORT_MACS[i]} &&
    sudo ip netns exec $node ip addr add ${PORT_IPS[i]}/24 dev $node  &&
    sudo ip netns exec $node ip link set $node up &&
    sudo ovs-vsctl set Interface $node external_ids:iface-id=${PORT_IDS[i]}
  "
done

PING_IPS=( $PORT1_IP $PORT0_IP )

for i in $(seq 0 $((${#HOSTS[*]}-1))); do

  node=${HOSTS[i]}
  PING_STATUS=`vagrant ssh node1 -c "sudo ip netns exec node1 ping -c 3 ${PING_IPS[i]} > /dev/null; echo $?"`
  if [[ ${PING_STATUS//[ $'\001'-$'\037']} -ne 0 ]]; then
    echo "ERROR: $node is not able to ping the other node."
    exit 1
  fi
done

for i in $(seq 0 $((${#HOSTS[*]}-1))); do
  node=${HOSTS[i]}
  echo $node ${PORT_MACS[i]}  ${PORT_IPS[i]}  ${PORT_IDS[i]} &&
  echo "============="
done

for i in $(seq 0 $((${#HOSTS[*]}-1))); do
  node=${HOSTS[i]}
  vagrant ssh $node -c "sudo ip netns del $node"
  vagrant ssh $node -c "sudo ovs-vsctl del-port $node"
done

vagrant ssh master -c "curl -X DELETE http://localhost:9696/v2.0/ports/$PORT0_ID"
vagrant ssh master -c "curl -X DELETE http://localhost:9696/v2.0/ports/$PORT1_ID"
vagrant ssh master -c "curl -X DELETE http://localhost:9696/v2.0/networks/$NETWORK0_ID"

unset NETWORK0 NETWORK0_ID SUBNET0 PORT0 PORT0_ID PORT0_IP PORT0_MAC PORT1 PORT1_ID PORT1_IP PORT1_MAC
