#!/bin/bash -e

NODES=( master node1 node2 )

FAIL=0

for node in "${NODES[@]}"; do
    vagrant ssh $node -c "
sudo setenforce 0 &&
sudo dnf install -y docker iproute-tc go git vim psmisc &&
sudo systemctl enable docker &&
sudo systemctl start docker &&
sudo go get github.com/kubernetes-incubator/cri-tools/cmd/crictl &&
sudo cp /root/go/bin/crictl /usr/bin/ &&
sudo bash -c 'cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF' &&
sudo dnf install -y kubelet kubeadm kubectl &&
sudo systemctl enable kubelet &&
sudo systemctl start kubelet &&
sudo bash -c 'cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF' &&
sudo sysctl --system
    " &
done

for job in $(jobs -p); do
    echo $job
    wait $job || let "FAIL+=1"
done

if [ "$FAIL" != "0" ]; then
    echo "Nodes installation failed $FAIL times"
    exit 1
fi

vagrant ssh master -c "
sudo kubeadm init --pod-network-cidr=192.168.0.0/16 | tee /tmp/init &&
sudo kubectl --kubeconfig /etc/kubernetes/admin.conf apply -f https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/hosted/kubeadm/1.7/calico.yaml &&
while ( sudo kubectl --kubeconfig /etc/kubernetes/admin.conf get pods --no-headers --all-namespaces | grep -v Running ); do
    sleep 1
done
"

join_cmd=$(vagrant ssh master -c 'cat /tmp/init | grep "kubeadm join"')

vagrant ssh node1 -c "sudo $join_cmd --ignore-preflight-errors=cri"
vagrant ssh node2 -c "sudo $join_cmd --ignore-preflight-errors=cri"

vagrant ssh master -c "sudo cat /etc/kubernetes/admin.conf" > admin.conf

sleep 5

kubectl --kubeconfig ./admin.conf get nodes
